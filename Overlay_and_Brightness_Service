package app.ram.overlay;

import android.app.Notification;
import android.app.Service;
import android.content.BroadcastReceiver;
import android.content.Context;
import android.content.Intent;
import android.content.IntentFilter;
import android.graphics.PixelFormat;
import android.os.IBinder;
import android.support.v4.app.NotificationCompat;
import android.util.Log;
import android.view.Gravity;
import android.view.WindowManager;
import android.widget.LinearLayout;

import java.io.DataOutputStream;
import java.io.IOException;

public class OverlayService extends Service {

    int color;
    LinearLayout oView;
    WindowManager.LayoutParams localLayoutParams;
    BroadcastReceiver mReceiver;

    @Override
    public IBinder onBind(Intent i) {
        return null;
    }

    @Override
    public int onStartCommand(Intent intent, int flags, int startId) {
        String s = intent.getExtras().getString("command");
        int condition = intent.getExtras().getInt("ambient condition");
        if (s != null) {
            if (s.equals("STOP") && oView != null) {
                stopSelf();                   //this does not make oView null
            }
        }

        if (condition == 1) {
            Log.i("Checking flow", "low light");
            set_screen_brightness(1);
        } else if (condition == 6) {
            Log.i("Checking flow", "no light");
            set_screen_brightness(1);
        } else if (condition == 3) {
            Log.i("Checking flow", "normal light");
            set_screen_brightness(75);
            return START_REDELIVER_INTENT;
        } else if (condition == 4){
            Log.i("Checking flow", "bright light");
            set_screen_brightness(127);
            return START_REDELIVER_INTENT;
        } else if (condition == 5) {
            Log.i("Checking flow", "very bright light");
            set_screen_brightness(255);
            return START_REDELIVER_INTENT;
        } else if (condition == 2) {
            Log.i("Checking flow", "dim light");
            set_screen_brightness(1);
            return START_REDELIVER_INTENT;
        }

        if (oView == null) {
            this.color = intent.getExtras().getInt("color");
            if (color == 0) {
                return START_REDELIVER_INTENT;
            }
            oView = new LinearLayout(getBaseContext());
            localLayoutParams = new WindowManager.LayoutParams();
            oView.setBackgroundColor(color);
            WindowManager.LayoutParams localLayoutParams = new WindowManager.LayoutParams();
            WindowManager manager = ((WindowManager) getApplicationContext().getSystemService(Context.WINDOW_SERVICE));
            localLayoutParams.type = WindowManager.LayoutParams.TYPE_SYSTEM_OVERLAY;
            localLayoutParams.gravity = Gravity.TOP;
            localLayoutParams.flags = WindowManager.LayoutParams.FLAG_NOT_FOCUSABLE|

                    // this is to enable the notification to recieve touch events
                    WindowManager.LayoutParams.FLAG_NOT_TOUCH_MODAL |

                    // Draws over status bar
                    WindowManager.LayoutParams.FLAG_LAYOUT_IN_SCREEN;

            localLayoutParams.width = WindowManager.LayoutParams.MATCH_PARENT;
            localLayoutParams.height = WindowManager.LayoutParams.MATCH_PARENT;
            localLayoutParams.format = PixelFormat.TRANSLUCENT;
            if (manager != null) {
                manager.addView(oView, localLayoutParams);
            }
        }

        return START_REDELIVER_INTENT;
    }


    @Override
    public void onCreate() {
        Notification notification = new NotificationCompat.Builder(this)
                .setSmallIcon(R.drawable.ic_launcher_background)
                .setContentTitle("Overlay")
                .setContentText("Foreground Overlay").build();
        startForeground(2, notification);
        super.onCreate();
        IntentFilter filter = new IntentFilter(Intent.ACTION_SCREEN_ON);
        mReceiver = new MyScreenReceiver();
        registerReceiver(mReceiver, filter);
    }


    @Override
    public void onDestroy() {
        if(oView!=null){
            WindowManager wm = (WindowManager) getSystemService(WINDOW_SERVICE);
            if (wm != null) {
                wm.removeView(oView);
            }
        }
        unregisterReceiver(mReceiver);
        super.onDestroy();
    }

    public void set_screen_brightness (int value) {
        /*try {
            Process su = Runtime.getRuntime().exec("su");
            DataOutputStream outputStream = new DataOutputStream(su.getOutputStream());

            outputStream.writeBytes("echo " + value + " > /sys/class/leds/lcd-backlight/brightness\n");
            outputStream.flush();

            outputStream.writeBytes("exit\n");
            outputStream.flush();
        } catch (IOException e) {e.printStackTrace();}
        */
        android.provider.Settings.System.putInt(this.getContentResolver(), android.provider.Settings.System.SCREEN_BRIGHTNESS_MODE,
                android.provider.Settings.System.SCREEN_BRIGHTNESS_MODE_MANUAL);
        android.provider.Settings.System.putInt(this.getContentResolver(), android.provider.Settings.System.SCREEN_BRIGHTNESS,
                value);
    }

}
